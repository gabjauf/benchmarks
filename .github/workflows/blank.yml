name: CI
'on':
  push:
    branches:
      - master
      - testing
  pull_request:
    branches:
      - master
  workflow_dispatch: null
jobs:
  zig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh zig
      - name: Run one container
        run: ./run-container.sh zig
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*zig.json
  rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh rust
      - name: Run one container
        run: ./run-container.sh rust
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*rust.json
  go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh go
      - name: Run one container
        run: ./run-container.sh go
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*go.json
  nim:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh nim
      - name: Run one container
        run: ./run-container.sh nim
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*nim.json
  elixir:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh elixir
      - name: Run one container
        run: ./run-container.sh elixir
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*elixir.json
  commit_results:
    runs-on: ubuntu-latest
    needs:
      - zig
      - rust
      - go
      - nim
      - elixir
      - nodejs
      - v
      - c_gcc
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: results
          path: results/
      - name: Dependency install
        run: npm i
      - name: Compute Stats
        run: node ./benchmarks-source/compute-stats.js
      - name: Configurate git
        run: |-
          git config --global user.name 'Benchmark bot'
                    git config --global user.email 'your-username@users.noreply.github.com'
                    git config pull.rebase false
                  
      - name: Commit results
        run: |-
          git add ./results
                    git diff --quiet ./results && git diff --staged --quiet ./results || git commit -m "Benchmark result update"
      - name: Publish results
        run: while ! git push; do git pull; done
  deploy:
    runs-on: ubuntu-latest
    needs:
      - commit_results
    steps:
      - uses: actions/checkout@v2
      - name: Change to web dir
        run: cd ./web
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build && touch ./out/.nojekyll
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
  nodejs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh nodejs
      - name: Run one container
        run: ./run-container.sh nodejs
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*nodejs.json
  v:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh v
      - name: Run one container
        run: ./run-container.sh v
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*v.json
  c_gcc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker images
        run: ./build-docker.sh c_gcc
      - name: Run one container
        run: ./run-container.sh c_gcc
      - uses: actions/upload-artifact@v2
        with:
          name: results
          path: results/**/*c_gcc.json
