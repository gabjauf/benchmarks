{"version":3,"sources":["components/chart.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["ChartComponent","props","console","log","data","labels","map","el","lang","datasets","label","compiling","backgroundColor","borderColor","borderWidth","width","height","Home","useState","setData","useEffect","fetch","process","then","res","json","hello_world","catch","err","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAGe,SAASA,EAAeC,GAGrC,OADAC,QAAQC,IAAIF,GACPA,EAAMG,MAIPH,EAAMG,OACRA,EAAO,CACLC,OAAQJ,EAAMG,KAAKE,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IACzBC,SAAU,CACR,CACEC,MAAO,mBACPN,KAAMH,EAAMG,KAAKE,KAAI,SAAAC,GAAE,OAAIA,EAAGI,UAAU,eAAjB,IACvBC,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEFC,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEFC,YAAa,MAMnB,kDAEE,cAAC,IAAD,CACEV,KAAMA,EACNW,MAAO,IACPC,OAAQ,SArCL,wBAET,IAAIZ,CAuCL,CC7Cc,SAASa,IACtB,MAAwBC,mBAAS,MAAjC,mBAAOd,EAAP,KAAae,EAAb,KAkBA,OAhBAC,qBAAU,WACHhB,GACHiB,MAAM,GAAD,OAAIC,cAAJ,wBAAiDC,MACpD,SAAUC,GACR,OAAOA,EAAIC,MACZ,IAAEF,MAAK,SAAUnB,GAEhBe,EAAQf,EAAKsB,YACd,IAAEC,OACD,SAAUC,GACR1B,QAAQC,IAAIyB,EAAK,SAClB,GAGR,IAGC,4CAEE,cAAC5B,EAAD,CAAgBI,KAAMA,MAG3B,CCMcyB,MAzBf,WACE,OACE,8BACE,eAAC,IAAD,WACE,iCACE,8BACE,8BACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,4BAMV,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAACd,EAAD,YAMX,ECpBce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJDO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,G","file":"static/js/main.e567f672.chunk.js","sourcesContent":["import React from \"react\";\nimport { Bar } from 'react-chartjs-2';\n\nexport default function ChartComponent(props) {\n\n  console.log(props);\n  if (!props.data) {\n    return <div></div>;\n  }\n  let data;\n  if (props.data) {\n    data = {\n      labels: props.data.map(el => el.lang),\n      datasets: [\n        {\n          label: 'Time elapsed (s)',\n          data: props.data.map(el => el.compiling['time elapsed']),\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)',\n          ],\n          borderWidth: 1,\n        },\n      ],\n    };\n  }\n  return (\n    <div>\n      Chart component\n      <Bar\n        data={data}\n        width={100}\n        height={50}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ChartComponent from \"../components/chart\";\n\nexport default function Home() {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    if (!data) {\n      fetch(`${process.env.PUBLIC_URL}/results/stats.json`).then(\n        function (res) {\n          return res.json()\n        }).then(function (data) {\n          // store Data in State Data Variable\n          setData(data.hello_world)\n        }).catch(\n          function (err) {\n            console.log(err, ' error')\n          }\n        )\n    }\n  });\n\n  return (\n    <div>\n      home page\n      <ChartComponent data={data}></ChartComponent>\n    </div>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from './pages/home';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <header>\n          <div>\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </header>\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}